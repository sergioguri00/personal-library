---
const { book } = Astro.props
---

<section transition:name={`book-${book.id}`} class="px-4 lg:px-24">
    <h1 class="text-2xl font-semibold text-center uppercase text-[#FFEE8C] lg:mb-4">
      {book.title}
    </h1>
    <div id="gridInfo" class="grid grid-rows-[475px_1fr] sm:grid-rows-[525px_1fr] lg:grid-cols-[500px_500px] lg:grid-rows-none w-full justify-center items-start h-full">
      <div class="flex flex-col justify-center items-center">
        <img
          src={`/covers/${book.id}.webp`}
          alt={book.title}
          class="w-72 h-[441px] sm:w-[325px] sm:h-[500px] object-fit"
        />
      </div>
      <div id="gridInfoText" class="flex flex-col gap-2">
        <div class="text-center lg:text-start">
          <p class="text-[#FFEE8C] font-semibold">Autor</p>
          <p>{book.author}</p>
        </div>
        <div class="text-center lg:text-start">
          <p class="text-[#FFEE8C] font-semibold">Año de publicación</p>
          <p>{book.year}</p>
        </div>
        {( book.saga !== null ? 
            (
              typeof(book.saga) === 'object' ?
                <div class="text-center lg:text-start">
                    <div>
                    {book.saga.length > 1 ? (
                        <p class="text-[#FFEE8C] font-semibold">Sagas</p>
                    ) : (
                        <p class="text-[#FFEE8C] font-semibold">Saga</p>
                    )}
                    {(
                          book.saga.map((saga: string, index: number) => (
                              <p>{`${saga} #${book.sagaOrder[index]}`}</p>
                          ))
                    )}
                    </div>
                </div>
                :
                <div class="text-center lg:text-start">
                    <div>
                        <p class="text-[#FFEE8C] font-semibold">Saga</p>
                        <p>{`${book.saga} #${book.sagaOrder}`}</p>
                    </div>
                </div>
            )
            : null
        )}
        <div class="text-center lg:text-start">
          <p class="text-[#FFEE8C] font-semibold">Sinopsis</p>
          {
            book.sinopsis.length > 500 ? (
              <p id="holaaa">
                {book.sinopsis.slice(0, 500)}<span id="...">...</span><span id="moreSinopsis" class="hidden">{book.sinopsis.slice(500, book.sinopsis.length)}</span>
              </p>
              <button id="know-more-button" class="mt-2 rounded-2xl bg-[#FFEE8C] p-2 text-[#00001B] cursor-pointer hover:scale-105 transition">Saber más</button>
            ) : (
              <p>{book.sinopsis}</p>
            )
          }
        </div>
      </div>
    </div>
  </section>
  
  <script>
    document.addEventListener("astro:page-load", () => {
      const gridInfoText = document.getElementById("gridInfoText") as HTMLElement;
      const gridInfo = document.getElementById("gridInfo") as HTMLElement;
      const gridInfoTextHeight = gridInfoText.offsetHeight;
      const gridHeight = gridInfoTextHeight - 60;
      const knowMoreButton = document.getElementById("know-more-button");
      const sinopsis = document.getElementById("holaaa") as HTMLElement;
      const firstHeightSinopsis = sinopsis.offsetHeight;
      const gridInfoStyle = getComputedStyle(gridInfo);

      knowMoreButton?.addEventListener("click", () => {
        const moreSinopsis = document.getElementById("moreSinopsis");
        const sinopsis = document.getElementById("holaaa") as HTMLElement;
        const points = document.getElementById("...");
        points?.classList.add("hidden");
        moreSinopsis?.classList.remove("hidden");
        knowMoreButton?.classList.add("hidden");
        const sinopsisDiff = sinopsis.offsetHeight - firstHeightSinopsis;
        const imageHeight = document.querySelector("img")?.offsetHeight;
        if ((gridInfoStyle.gridTemplateColumns.split(" ").length > 1) && (gridHeight + sinopsisDiff > 500))
          gridInfo.style.height = `${gridHeight + sinopsisDiff}px`;
        else if ((gridInfoStyle.gridTemplateRows.split(" ").length > 1) && (gridInfoTextHeight + sinopsisDiff + (imageHeight || 0)) > 500)
          gridInfo.style.height = `${gridInfoTextHeight + sinopsisDiff + (imageHeight || 0)}px`;
      });
    });
  </script>